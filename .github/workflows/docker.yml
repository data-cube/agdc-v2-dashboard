---
name: Docker

on:
  push:
    branches:
      - develop
    paths:
      - '**'

  release:
    types:
      - created

env:
  IMAGE_NAME: opendatacube/dashboard

jobs:
  docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || contains(github.ref, 'cubedash-')

    steps:
      - name: Checkout git
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # ToDO: run claire_db test thingy here

      - name: Build and Push latest Docker image
        uses: whoan/docker-build-with-cache-action@v4
        with:
          image_name: ${{ env.IMAGE_NAME }}
          username: gadockersvc
          password: "${{ secrets.DockerPassword }}"
          build_extra_args: "--build-arg=ENVIRONMENT=deployment"

      - name: Get tag for this build if it exists
        if: contains(github.ref, 'cubedash-')
        run: >
          echo ::set-env name=RELEASE::$(docker run --rm -e DATACUBE_DB_URL=postgresql://username:password@hostname:5432/database
          ${{ env.IMAGE_NAME }}:latest python3 -c 'import cubedash; print(cubedash.__version__)')

      - name: Log the tag
        run: echo $RELEASE

      - name: Build and Push release if we have a tag
        uses: whoan/docker-build-with-cache-action@v4
        if: contains(github.ref, 'cubedash-')
        with:
          image_name: ${{ env.IMAGE_NAME }}
          image_tag: ${{ env.RELEASE }}
          username: gadockersvc
          password: "${{ secrets.DockerPassword }}"
          build_extra_args: "--build-arg=ENVIRONMENT=deployment"

      - name: Notify Slack for Failures
        uses: rtCamp/action-slack-notify@v2.0.0
        if: failure()
        env:
          SLACK_CHANNEL: explorer-alerts
          SLACK_ICON: 'https://github.com/docker.png?size=48'
          SLACK_COLOR: '#482de1'
          SLACK_MESSAGE: ''
          SLACK_TITLE: Docker failure
          SLACK_USERNAME: Explorer Docker
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
